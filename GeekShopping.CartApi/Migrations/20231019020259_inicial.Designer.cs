// <auto-generated />
using System;
using GeekShopping.CartApi.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeekShopping.CartApi.Migrations
{
    [DbContext(typeof(MySqlCartApiContext))]
    [Migration("20231019020259_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GeekShopping.CartApi.Model.CartDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    b.Property<long?>("cartHeaderId")
                        .HasColumnType("bigint");

                    b.Property<int?>("count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<long?>("productId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("cartHeaderId");

                    b.HasIndex("productId");

                    b.ToTable("CartDetails");
                });

            modelBuilder.Entity("GeekShopping.CartApi.Model.CartHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    b.Property<string>("cuponCode")
                        .HasColumnType("longtext");

                    b.Property<string>("userId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CartHeader");
                });

            modelBuilder.Entity("GeekShopping.CartApi.Model.Product", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("GeekShopping.CartApi.Model.CartDetail", b =>
                {
                    b.HasOne("GeekShopping.CartApi.Model.CartHeader", "cartHeader")
                        .WithMany()
                        .HasForeignKey("cartHeaderId");

                    b.HasOne("GeekShopping.CartApi.Model.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cartHeader");

                    b.Navigation("product");
                });
#pragma warning restore 612, 618
        }
    }
}
